/*
 * This file was generated by the Gradle 'init' task.
 */


plugins {
    id 'java'
}

repositories {
//    mavenLocal()
    flatDir {
        dirs '/Users/marius/.xbit/libs/'
    }
}

dependencies {
	implementation 'codex:codex.common:0.1.0'
	implementation 'codex:codex.xbit.libs:0.1.0'
}

group = 'codex'
version = '0.1.0'
sourceCompatibility = '14'


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
//    options.fork = true
//    options.incremental = true
//	options.compilerArgs += "-Xmaxerrs 100"
//	println 'Compiler args: ' + options.compilerArgs
//    options.forkOptions.executable = 'javac'

}

allprojects {
  gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xmaxerrs" << "1000" << "-Xlint:deprecation" << "-Xlint:unchecked"
//        options.compilerArgs << "-Xmaxerrs" << "1000"
    }
  }
}

compileJava {
    // This only works when forking and passing 'javac' as an executable
//    options.compilerArgs << "-Xmaxerrs 100"
//    options.fork = true
//    options.forkOptions.executable = 'javac'
}


//project.gradle.startParameter.excludedTaskNames.add('processResources')
project.gradle.startParameter.excludedTaskNames.add('compileTestJava')
project.gradle.startParameter.excludedTaskNames.add('processTestResources')
project.gradle.startParameter.excludedTaskNames.add('testClasses')
project.gradle.startParameter.excludedTaskNames.add('test')
project.gradle.startParameter.excludedTaskNames.add('check')


task copyJarToLibs(type: Copy) {
    from jar
    into "/Users/marius/.xbit/libs/"
}

build.dependsOn copyJarToLibs
